{"version":3,"sources":["components/Navbar.js","model/data.js","components/About.js","components/Projects.js","components/Contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","rel","Component","name","profileImgSrc","aboutText","aboutGrid","projects","title","link","img","social","url","CV","About","id","src","data","alt","map","text","i","key","Projects","project","target","Contact","role","aria-label","download","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50280f7b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Navbar extends Component {\n    render() {\n        return (\n            <div className=\"menu\">\n                <button className=\"menu__button\">\n                    &#9776;\n                    </button>\n                <div className=\"menu__content\">\n                    <a className=\"menu__content__link\" href=\"#About\" rel=\"noopener noreferrer\">\n                        About\n                    </a>\n                    <a className=\"menu__content__link\" href=\"#Projects\" rel=\"noopener noreferrer\">\n                        Projects\n                    </a>\n                    <a className=\"menu__content__link\" href=\"#Contact\" rel=\"noopener noreferrer\">\n                        Contact\n                    </a>\n                </div>\n            </div>);\n    }\n}\n\nexport default Navbar;","export default {\n    //ABOUT\n    name: 'Gergana Minova',\n    profileImgSrc: 'https://i.imgur.com/wbshJ54.jpg',\n    aboutText: [\n        \"I mentor prospect students at Founders and Coders. You can also find me at various meetups, such as London Node.js User Group, TAQFull(Technology, Agility & Quality), and London Tech Ladies.\",\n        \"I also like hackathons. Currently, I am preparing for the Code Untapped Diversity Hackathon (15th Sep '19), as well as EITFoodChangeMakers: Food and Environment Hackathon (5-6th Oct '19).\",\n        \"I am committed to building software, tackling challenges and achieving goals. My objective is to join a friendly team and work towards clever and elegant solutions.\"\n    ],\n    aboutGrid: [\n        \"https://i.imgur.com/I7jXzxR.png\",\n        \"https://i.imgur.com/3HdTez6.png\",\n        \"https://i.imgur.com/q9Gd5B2.png\",\n        \"https://i.imgur.com/ZMOBeOz.png\",\n        \"https://i.imgur.com/whQw5pf.png\",\n        \"https://i.imgur.com/xFnEsQe.png\",\n        \"https://i.imgur.com/rpMby4E.png\",\n        \"https://i.imgur.com/L48CZMZ.jpg\",\n        \"https://i.imgur.com/HDh5HyN.png\",\n        \"https://i.imgur.com/sVtEvw8.png\",\n        \"https://i.imgur.com/h30QHHZ.png\",\n        \"https://i.imgur.com/DlDXScO.png\"\n    ],\n    //PROJECTS\n    projects: [\n        {\n            title: \"Latest News\",\n            link: \"https://github.com/gminova/latest-news\",\n            img: \"https://github.com/gminova/latest-news/blob/master/public/images/Screenshot%20from%202019-09-05%2000-21-28.png?raw=true\"\n        },\n        {\n            title: \"Crime Watcher\",\n            link:\"https://github.com/gminova/crime-watcher\",\n            img:\"https://i.imgur.com/RLAMVR2.png\"\n        },\n        {\n            title: \"Pearls of wisdom\",\n            link:\"https://github.com/gminova/pearls-of-wisdom\",\n            img:\"https://i.imgur.com/WRfEqwW.png\"\n        },\n        {\n            title: \"Project Fear\",\n            link:\"https://github.com/gminova/project-fear\",\n            img:\"https://i.imgur.com/AOxnRcn.png\"\n        },\n        {\n            title: \"To-do app\",\n            link: \"https://github.com/gminova/to-do-app\",\n            img: \"https://i.imgur.com/Bt2ZuXG.jpg\"\n        },\n        {\n            title: \"Wather app\",\n            link: \"https://github.com/gminova/weather-app\",\n            img: \"https://i.imgur.com/uYnCglX.jpg\"\n        },\n        {\n            title: \"Tic-tac-toe\",\n            link: \"https://github.com/gminova/tic-tac-toe\",\n            img: \"https://i.imgur.com/e0hBbEg.png\"\n        },\n        {\n            title: \"Calculator\",\n            link: \"https://gminova.github.io/calc-js/\",\n            img: \"https://i.imgur.com/PIX7zzm.png\"\n        },\n        {\n            title: \"Search GIFs\",\n            link: \"https://github.com/gminova/search-gifs\",\n            img: \"https://i.imgur.com/FoBXSDg.jpg\"\n        },\n        {\n            title: \"Japanese memory game\",\n            link: \"https://github.com/gminova/memory-game\",\n            img: \"https://i.imgur.com/d4sSgKZ.png\"\n        }\n    ],\n    //CONTACT\n    social: [\n        {\n            name: 'Twitter',\n            url: \"https://twitter.com/gigi_minova\"\n        },\n        {   \n            name: 'GitHub',\n            url: \"https://github.com/gminova\"\n        },\n        {   \n            name:'LinkedIn',\n            url:\"https://linkedin.com/in/gminova\"\n        },\n        {\n            name: 'CodeWars',\n            url: \"https://www.codewars.com/users/gminova\"\n        },\n        {\n            name: 'FreeCodeCamp',\n            url: \"https://www.freecodecamp.org/gminova\"\n        }\n    ],\n    CV: {\n        name: 'Download CV.pdf',\n        url: \"assets/Gergana MinovaCV.pdf\"\n    }\n}","import React, { Component } from 'react';\nimport data from '../model/data';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"section\" id=\"About\">\n                <img className=\"profile\" src={data.profileImgSrc} alt=\"profile\"></img>\n                <h1 className=\"about__header\">\n                    {data.name}\n                </h1>\n                {data.aboutText.map((text, i)=>(\n                <p className=\"about__text\" key={i}>\n                    {text}\n                </p>\n                ))}\n                <div className=\"about__grid\">\n                {data.aboutGrid.map((img, i)=>(\n                    <img className=\"logo\" alt=\"logo\" src={img} key={i}></img>\n                ))}\n                </div>\n                <a className=\"arrow__link\" href=\"#Projects\">\n                    <p className=\"arrow\">\n                        &#x2193;\n                    </p>\n                </a>\n            </div>);\n    }\n}\n\n\nexport default About;","import React, { Component } from 'react';\nimport data from '../model/data';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div className=\"section section--projects\" id=\"Projects\">\n                <div className=\"projects__gallery\">\n\n                    {data.projects.map((project, i)=>(\n                        <a className=\"project__link\" href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" key={i}> \n                        <p className=\"project__title\">{project.title}</p>\n                        <img className=\"projects__gallery__img\" src={project.img} alt=\"projects__gallery__img\" key={i}></img>\n                        </a>\n                    ))}\n                </div>\n            </div>);\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport data from '../model/data';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div className=\"section\" id=\"Contact\">\n            <span role=\"img\" aria-label=\"dart-emoji\">🎯</span>\n                {data.social.map((link, i)=>(\n                    <a className=\"contact__link\" target=\"_blank\" rel=\"noopener noreferrer\" \n                    href={link.url} key={i}>\n                    {link.name} </a>\n                    ))\n                }\n                <a className=\"contact__link\" href={data.CV.url} download=\"GerganaMinovaCV.pdf\">{data.CV.name}</a>\n            </div>\n            );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                &copy;2019 Made with <span role=\"img\" aria-label=\"heart-emoji\">❤️</span> by G. Minova\n            </footer>\n\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <About></About>\n      <Projects></Projects>\n      <Contact></Contact>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}